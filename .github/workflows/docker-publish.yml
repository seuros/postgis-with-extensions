name: Create and publish Docker images

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  schedule:
    # postgis/postgis update schedule is '15 5 * * 1'
    # https://github.com/postgis/docker-postgis/blob/master/.github/workflows/main.yml
    - cron: '15 7 * * 1'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  TEST_TAG: ${{ github.repository }}:test
  COMPOSE_FILE: ./docker-compose.test.yml
  LATEST_TAG: 16-3.4

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    strategy:
      fail-fast: false
      matrix:
        postgres: [16]
        postgis: ['3.4']
        platform: [linux/amd64, linux/arm64]

    env:
      BASE_IMAGE_TAG: ${{ matrix.postgres }}-${{ matrix.postgis }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: ${{ env.BASE_IMAGE_TAG }}-${{ matrix.platform }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          build-args: |
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}

      - name: Verify image architecture
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker pull --platform ${{ matrix.platform }} ${{ steps.meta.outputs.tags }}
          docker inspect --format='{{.Architecture}}' ${{ steps.meta.outputs.tags }}

  create-manifest:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }} \
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux/amd64 \
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux/arm64
          docker manifest push ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}

      - name: Verify manifest
        run: |
          docker manifest inspect ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}
