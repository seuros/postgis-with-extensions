name: Create and publish Docker images

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  schedule:
    # postgis/postgis update schedule is '15 5 * * 1'
    - cron: '15 7 * * 1'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BASE_IMAGE_TAG: 16-3.4

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]

    outputs:
      digest_amd64: ${{ steps.get_digest_amd64.outputs.digest }}
      digest_arm64: ${{ steps.get_digest_arm64.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set platform tag
        run: |
          PLATFORM_TAG="${{ matrix.platform }}"
          PLATFORM_TAG="${PLATFORM_TAG/linux\//linux-}"
          echo "PLATFORM_TAG=$PLATFORM_TAG" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-${{ env.PLATFORM_TAG }}
          platforms: ${{ matrix.platform }}
          build-args: |
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}

      - name: Get digest for amd64
        if: matrix.platform == 'linux/amd64'
        id: get_digest_amd64
        run: echo "digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

      - name: Get digest for arm64
        if: matrix.platform == 'linux/arm64'
        id: get_digest_arm64
        run: echo "digest=${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  create-manifest:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest for version and latest tags
        run: |
          # Create the manifest for both platforms under the 16-3.4 tag
          docker manifest create ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }} \
            --amend ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux-amd64 \
            --amend ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux-arm64

          # Push the version tag ${{ env.BASE_IMAGE_TAG }}
          docker manifest push ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}

          # Create and push the manifest under the 'latest' tag
          docker manifest create ${{ env.REGISTRY }}/${{ github.repository }}:latest \
            --amend ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux-amd64 \
            --amend ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}-linux-arm64

          # Push the 'latest' tag
          docker manifest push ${{ env.REGISTRY }}/${{ github.repository }}:latest

      - name: Verify manifests
        run: |
          docker manifest inspect ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.BASE_IMAGE_TAG }}
          docker manifest inspect ${{ env.REGISTRY }}/${{ github.repository }}:latest
